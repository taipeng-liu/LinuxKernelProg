I built this Linux security module ("the module") which implements a mandaroty access control po-
licy for file accesses in the Linux environment. This module is already loaded at during the boot
process, and the system will automatically run the callback functions (called "hooks") I imple-
mented in `mp4.c`. 

Here I would briefly introduce the implementation of the hooks in the module.
a) mp4_cred_alloc_blank(struct cred *cred, gfp_t gfp)
   mp4_cred_free(struct cred *cred)
   mp4_cred_prepare(struct cred *new, const struct cred *old, gfp_t gfp)
   These three hooks allocate, free, and copy memory for our security blobs. Our security blobs
   is simply:
   struct mp4_security {
	   int mp4_flags;
   }
   mp4_flags store the security id (sid) of target task (ssid) or files/directories (osid). 

b) mp4_bprm_set_creds(struct linux_binprm *bprm)
   This hook saves security information in the bprm->security field, typically based on informa-
   tion about the bprm->file. I use bprm->file to get the inode of the file, then read the attri-
   bute value to determine the mp4_flags.  
   This hook may be called multiple times during a single execve, e.g. for interpreters, so I on-
   ly permit the first call to this hook. The hook can tell whether it has already been called by
   checking to see if bprm->security is non-NULL.  If so, then the hook initiate as alloc_blank.

c) mp4_inode_init_security(...)
   This hook sets the xattr of a newly created inode. This value will depend on whether the task
   that creates this inode has the target sid or not. If so, I set the value to MP4_TARGET_SID, 
   and if not, I set it to MP4_NONTARGET_SID instead.

d) mp4_inode_permission(struct inode *inode, int mask)
   This hook is the main logic of our LSM, and it mainly depend on the helper function to deter-
   mine the permission control, mp4_has_permission. The helper function first checks whether the
   ssid is MP4_TARGET_SID or not. Then it checks the type of osid, and subsequently checks the 
   mask type to see if the operation is allowed to the object.
